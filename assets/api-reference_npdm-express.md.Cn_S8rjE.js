import{_ as e,c as r,o as t,a1 as o}from"./chunks/framework.DZ20Tprd.js";const _=JSON.parse('{"title":"@npdm/express","description":"","frontmatter":{},"headers":[],"relativePath":"api-reference/npdm-express.md","filePath":"api-reference/npdm-express.md"}'),a={name:"api-reference/npdm-express.md"},s=o('<h1 id="npdm-express" tabindex="-1">@npdm/express <a class="header-anchor" href="#npdm-express" aria-label="Permalink to &quot;@npdm/express&quot;">​</a></h1><h2 id="createnpdmrouter-options" tabindex="-1">createNpdmRouter(options) <a class="header-anchor" href="#createnpdmrouter-options" aria-label="Permalink to &quot;createNpdmRouter(options)&quot;">​</a></h2><p>A method which returns an <a href="https://expressjs.com/en/4x/api.html#router" target="_blank" rel="noreferrer">Express router object</a> with the only one parametrized endpoint: <code>/:packageName/:version/*</code>.</p><p>As an example, if we request the URL <code>/lodash/4.17.21/_apply.js</code>, we will get file <code>_apply.js</code> from the <code>lodash</code> package of version <code>4.17.21</code>.</p><p>The <code>createNpdmRouter</code> method takes <a href="./npdm-core.html#inmemorydynamicloaderoptions">InMemoryDynamicLoaderOptions</a> as a parameter and allows configuring <code>InMemoryDynamicLoader</code> which is used under the hood.</p><p>The next rules describe the behavior of the endpoint:</p><ul><li>If the requested package is not allowed by package specifiers, the 400 HTTP status is returned</li><li>If asset is not found, the 404 HTTP status is returned</li><li>In case of any internal errors HTTP status 500 is returned, and the error is logged into the console.</li></ul>',7),n=[s];function d(p,i,c,l,h,m){return t(),r("div",null,n)}const f=e(a,[["render",d]]);export{_ as __pageData,f as default};
