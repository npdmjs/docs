import{_ as s,c as i,o as a,a1 as e}from"./chunks/framework.DZ20Tprd.js";const g=JSON.parse('{"title":"@npdm/module-federation","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"api-reference/npdm-module-federation.md","filePath":"api-reference/npdm-module-federation.md"}'),n={name:"api-reference/npdm-module-federation.md"},t=e(`<h1 id="npdm-module-federation" tabindex="-1">@npdm/module-federation <a class="header-anchor" href="#npdm-module-federation" aria-label="Permalink to &quot;@npdm/module-federation&quot;">​</a></h1><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="initnpdm-npdmoptions-modulesmap" tabindex="-1">initNpdm(npdmOptions, modulesMap) <a class="header-anchor" href="#initnpdm-npdmoptions-modulesmap" aria-label="Permalink to &quot;initNpdm(npdmOptions, modulesMap)&quot;">​</a></h3><p>Initializes Module Federation and returns typed <code>loadDynamicModule</code> method to dynamically load packages. The first one, <code>npdmOptions</code>, should contain the URL to the NPDM server endpoint (for example, as part of the Express server created with <code>@npdm/express</code>). <code>npdmOptions</code> also may include (optionally) parameters to pass to the Module Federation <a href="https://module-federation.io/guide/basic/runtime.html#init" target="_blank" rel="noreferrer">init() method</a>.</p><p>The second parameter is <code>modulesMap</code>, where the key is the alias for the component to retrieve with <code>loadDynamicModule</code>, and value is <a href="#dynamicmodule">DynamicModule</a> which is expected to be created with the method <a href="#connectmoduledynamicmodule-packageversion">connectModule</a></p><h3 id="connectmodule-dynamicmodule-packageversion" tabindex="-1">connectModule(dynamicModule, packageVersion) <a class="header-anchor" href="#connectmodule-dynamicmodule-packageversion" aria-label="Permalink to &quot;connectModule(dynamicModule, packageVersion)&quot;">​</a></h3><p>The <code>connectModule</code> method is used to allow strict typing in the <code>loadDynamicModule</code> method. The first argument should be a module specification, and the second argument is the expected module version. It returns <code>DynamicModule</code> which can be consumed by <code>initNpdm</code> method to load some particular module of the particular version from the particular package.</p><h3 id="getremotename" tabindex="-1">getRemoteName <a class="header-anchor" href="#getremotename" aria-label="Permalink to &quot;getRemoteName&quot;">​</a></h3><p>Remote name for the Module Federation in the NPDM system is standardized and should be combined from package name and version. The same method should be reused with <code>ModuleFederationPlugin</code> in the remote name, and is used under the hood in the <code>initNpdm</code> method</p><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2><h3 id="dynamicpackagespec" tabindex="-1">DynamicPackageSpec <a class="header-anchor" href="#dynamicpackagespec" aria-label="Permalink to &quot;DynamicPackageSpec&quot;">​</a></h3><p>The <code>DynamicPackageSpec</code> type represents the basic NPDM package, which should be used with <code>@npdm/module-federation</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Remote package entry point specification</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DynamicPackageSpec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Name of the NPM package, required to retrieve the assets from it */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  packageName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// package name of current package</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Current version of the package from which module specification is taken */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  packageVersion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// default version of current package</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** The path to the remote entry file for the dynamic module */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  remoteEntryRelativePath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// where remote entry is placed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Module Federation&#39;s entryGlobalName */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  remoteEntryGlobalName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Module Federations&#39;s RemoteEntryType */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  remoteType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteEntryType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="dynamicmodule" tabindex="-1">DynamicModule <a class="header-anchor" href="#dynamicmodule" aria-label="Permalink to &quot;DynamicModule&quot;">​</a></h3><p>If <code>DynamicPackageSpec</code> describes NPDM package as remote, than <code>DynamicModule</code> describes the particular module exposed by this remote. This is a generic type, which optionally includes <code>TProps</code>, Typescript typing for the particular module.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DynamicModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TProps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Package specification **/</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  packageSpec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DynamicPackageSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * A path by which exposed component can be retrieved</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@example</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> &quot;/Button&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  exposedPath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>For example, if in <code>ModuleFederationPlugin</code> options we set:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ModuleFederationPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRemoteName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, version),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    exposes: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;./Button&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./src/components/Button.tsx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...other options</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }),</span></span></code></pre></div><p>Than in our module we should set <code>exposedPath</code> as &quot;/Button&quot;:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> buttonModule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DynamicModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ButtonModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  exposedPath: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/Button&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  packageSpec,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="npdmoptions" tabindex="-1">NpdmOptions <a class="header-anchor" href="#npdmoptions" aria-label="Permalink to &quot;NpdmOptions&quot;">​</a></h3><p>Includes all the params for the ModuleFederation <a href="https://module-federation.io/guide/basic/runtime.html#init" target="_blank" rel="noreferrer">init() method</a> as optional, and also required <code>npdmUrl</code> (see <a href="#initnpdmnpdmoptions-modulesmap">initNpdm method</a>)</p>`,22),p=[t];function l(h,d,o,k,r,c){return a(),i("div",null,p)}const y=s(n,[["render",l]]);export{g as __pageData,y as default};
