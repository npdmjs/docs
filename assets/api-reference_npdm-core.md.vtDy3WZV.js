import{_ as a,c as s,o as i,a1 as e}from"./chunks/framework.DZ20Tprd.js";const y=JSON.parse('{"title":"@npdm/core","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"api-reference/npdm-core.md","filePath":"api-reference/npdm-core.md"}'),n={name:"api-reference/npdm-core.md"},t=e(`<h1 id="npdm-core" tabindex="-1">@npdm/core <a class="header-anchor" href="#npdm-core" aria-label="Permalink to &quot;@npdm/core&quot;">​</a></h1><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><h3 id="packageloader" tabindex="-1">PackageLoader <a class="header-anchor" href="#packageloader" aria-label="Permalink to &quot;PackageLoader&quot;">​</a></h3><p>Manages the loading of package contents from a registry. Supports configuration of allow list to include or exclude specific packages based on their names and versions. Takes <a href="#packageloaderoptions">PackageLoaderOptions</a> as an argument.</p><h3 id="inmemorydynamicloader" tabindex="-1">InMemoryDynamicLoader <a class="header-anchor" href="#inmemorydynamicloader" aria-label="Permalink to &quot;InMemoryDynamicLoader&quot;">​</a></h3><p>The basic class of the <code>@npdm/core</code>. Manages the in-memory caching of package contents, allowing dynamic retrieval of package assets. Supports expirable caching mechanisms if a time-to-live (TTL) is specified in the options. Constructor accepts <a href="#inmemorydynamicloader">InMemoryDynamicLoaderOptions</a> as an argument.</p><h3 id="restrictedpackageerror" tabindex="-1">RestrictedPackageError <a class="header-anchor" href="#restrictedpackageerror" aria-label="Permalink to &quot;RestrictedPackageError&quot;">​</a></h3><p>A subclass of the <code>Error</code> which is thrown when accessing the restricted package, not allowed by the list of package specifiers, passed into the <code>InMemoryDynamicLoader</code> or <code>PackageLoader</code>.</p><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2><h3 id="packagecontent" tabindex="-1">PackageContent <a class="header-anchor" href="#packagecontent" aria-label="Permalink to &quot;PackageContent&quot;">​</a></h3><p>An array of files and their contents returned by <code>fetchPackageContent</code> method of the <code>PackageLoader</code> class. Used in <code>InMemoryDynamicLoader</code> under the hood.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PackageContent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Uint8Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}[];</span></span></code></pre></div><h3 id="packageloaderoptions" tabindex="-1">PackageLoaderOptions <a class="header-anchor" href="#packageloaderoptions" aria-label="Permalink to &quot;PackageLoaderOptions&quot;">​</a></h3><p>The constructor argument for the <a href="#packageloader">PackageLoader</a>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PackageLoaderOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Registry URL to fetch package content from. By default &quot;https://registry.npmjs.org&quot; */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  registry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Which packages to include. If not provided, all packages will be included */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  include</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PackageSpecifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Which packages to exclude. Filters included packages */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  exclude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PackageSpecifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="packagespecifier" tabindex="-1">PackageSpecifier <a class="header-anchor" href="#packagespecifier" aria-label="Permalink to &quot;PackageSpecifier&quot;">​</a></h3><p>Package specifier to include or exclude package into or out of the list of allowed packages. If a package name or version is a string, it will be matched exactly.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PackageSpecifier</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegExp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  version</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegExp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="inmemorydynamicloaderoptions" tabindex="-1">InMemoryDynamicLoaderOptions <a class="header-anchor" href="#inmemorydynamicloaderoptions" aria-label="Permalink to &quot;InMemoryDynamicLoaderOptions&quot;">​</a></h3><p>A union of <a href="#packageloaderoptions">PackageLoaderOptions</a> and <code>ttl</code> parameter, specific for <a href="#inmemorydynamicloader">InMemoryDynamicLoader</a>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InMemoryDynamicLoaderOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PackageLoaderOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /** Maximum time to keep package content in memory if unused, 0 or false disables cleanup */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  ttl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,21),p=[t];function h(l,r,o,k,c,d){return i(),s("div",null,p)}const m=a(n,[["render",h]]);export{y as __pageData,m as default};
